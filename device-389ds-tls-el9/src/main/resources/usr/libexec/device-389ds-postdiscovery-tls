#!/bin/bash

set -e

request="${1}"
instance="${2}"

#
# Add/update/remove TLS

find /etc/device/services/ldap/tls/ -mindepth 1 -maxdepth 1 -type l | \
while read line; do

  if [ ! -e "$line/instance.d/name.txt" ]; then
    continue;
  fi
  if [ "${instance}" != "$(head $line/instance.d/name.txt)" ]; then
    continue;
  fi

  if [ -e "$line/port.txt" ]; then
    port="$(head -n 1 $line/port.txt)"
  else
    port=636
  fi

  if test ! -L "$line/certificate.d"; then
    continue;
  else
    target=$(readlink -f "$line/certificate.d")
    uuid="$(basename $target)"
  fi

  # remove old instances
  if test -f "$line/removed"; then

    target=$(readlink -f "$line")

    if test ! -f "$line/disabled.bin"; then

      logger -t dirsrv-postdiscovery "disabling directory server tls on instance ${instance}..."

      dsconf "ldapi://%2frun%2fslapd-${instance}.socket" security disable || echo "Could not disable tls" > "$line/error"

      if test ! -f "$line/error"; then
        logger -t dirsrv-postdiscovery "disabled directory server tls on instance ${instance}."
      else
        logger -t dirsrv-postdiscovery "failed to disable directory server tls for instance ${instance}."
      fi

      if command -v /usr/bin/firewall-cmd 2>/dev/null; then
        logger -t "$0" "Notice: disabling firewall for ldaps (port ${port})..."
        /usr/bin/firewall-cmd --quiet --zone=public --remove-port=${port}/tcp
        logger -t "$0" "Notice: disabled firewall for ldaps (port ${port})."
      fi

    fi

    # remove folder
    rm -f "${target}"/*
    rmdir "${target}"
    rm -f "${line}"

  # add/update new tls?
  elif test -f "$line/added" -o -f "$line/updated"; then

    rm -f "$line/error"

    if test -f "$line/disabled.bin"; then

      logger -t dirsrv-postdiscovery "disabling directory server tls on instance ${instance}..."

      dsconf "ldapi://%2frun%2fslapd-${instance}.socket" security disable || echo "Could not disable tls" > "$line/error"

      if test ! -f "$line/error"; then
        logger -t dirsrv-postdiscovery "disabled directory server tls on instance ${instance}."
      else
        logger -t dirsrv-postdiscovery "failed to disable directory server tls for instance ${instance}."
      fi

    else

      # handle certs a second time if needed, when they've just been set
      if test "/run/pki-certificate/certificate-${uuid}.pem" -nt "/etc/dirsrv/slapd-${instance}/cert9.db"; then

        rm -f "/run/dirsrv/slapd-${instance}-server-${uuid}.yaml"

        logger -t dirsrv-postdiscovery@${instance} "${request}ing 389ds TLS certificate..."

        redwax-tool --pem-in="/run/pki-certificate/certificate-${uuid}.pem" \
                    --cert-out --chain-out --trust-out \
                    --secret-token-out="/etc/dirsrv/slapd-${instance}/pin.txt" \
                    --label-out=Server-Cert \
                    --nss-out=/etc/dirsrv/slapd-${instance}/ \
                    --metadata-out="/run/dirsrv/slapd-${instance}-server-${uuid}.yaml"

        logger -t dirsrv-postdiscovery@${instance} "${request}ed 389ds TLS certificate."

      fi

      if test "$line/ca-certificate.crt" -nt "/etc/dirsrv/slapd-${instance}/cert9.db"; then

        rm -f "/run/dirsrv/slapd-${instance}-server-ca-certificate.yaml"

        logger -t dirsrv-postdiscovery@${instance} "${request}ing 389ds TLS ca-certificate..."

        redwax-tool --trust-pem-in="$line/ca-certificate.crt" \
                    --no-cert-out --no-chain-out --trust-out \
                    --secret-token-out="/etc/dirsrv/slapd-${instance}/pin.txt" \
                    --nss-out=/etc/dirsrv/slapd-${instance}/ \
                    --metadata-out="/run/dirsrv/slapd-${instance}-server-ca-certificate.yaml"

        logger -t dirsrv-postdiscovery@${instance} "${request}ed 389ds TLS ca-certificate."

      fi

      logger -t dirsrv-postdiscovery "setting directory server tls on instance ${instance}..."

      dsconf "ldapi://%2frun%2fslapd-${instance}.socket" security set \
        --security on \
        --secure-port ${port} \
        --tls-protocol-min TLS1.2 \
        --allow-insecure-ciphers off \
        --allow-weak-dh-param off || echo "Could not set tls" > "$line/error"

      if test ! -f "$line/error"; then
        logger -t dirsrv-postdiscovery "set directory server tls on instance ${instance}."
      else
        logger -t dirsrv-postdiscovery "failed to set directory server tls for instance ${instance}."
        continue
      fi

      logger -t dirsrv-postdiscovery "enabling directory server tls on instance ${instance}..."

      dsconf "ldapi://%2frun%2fslapd-${instance}.socket" security enable || echo "Could not enable tls" > "$line/error"

      if test ! -f "$line/error"; then
        logger -t dirsrv-postdiscovery "enabled directory server tls on instance ${instance}."
      else
        logger -t dirsrv-postdiscovery "failed to enable directory server tls for instance ${instance}."
        continue
      fi

      logger -t dirsrv-postdiscovery "restarting directory server on instance ${instance}..."

      systemctl try-restart "dirsrv@${instance}"

      if test ! -f "$line/error"; then
        logger -t dirsrv-postdiscovery "restarted directory server on instance ${instance}."
      else
        logger -t dirsrv-postdiscovery "failed to restart directory server for instance ${instance}."
        continue
      fi

      if command -v /usr/bin/firewall-cmd 2>/dev/null; then
	      logger -t "$0" "Notice: enabling firewall for ldaps (port ${port})..."
        /usr/bin/firewall-cmd --quiet --zone=public --add-port=${port}/tcp
        logger -t "$0" "Notice: enabled firewall for ldaps (port ${port})."
      fi

    fi

    if test -f "$line/added"; then
      rm -f "$line/added"
    else
      rm -f "$line/updated"
    fi

  # ordinary instance, make sure world can see it
  else

    if test ! -f "$line/disabled.bin"; then
      if command -v /usr/bin/firewall-cmd 2>/dev/null; then
        logger -t "$0" "Notice: enabling firewall for ldaps (port ${port})..."
        /usr/bin/firewall-cmd --quiet --zone=public --add-port=${port}/tcp
        logger -t "$0" "Notice: enabled firewall for ldaps (port ${port})."
      fi
    else
      if command -v /usr/bin/firewall-cmd 2>/dev/null; then
        logger -t "$0" "Notice: disabling firewall for ldaps (port ${port})..."
        /usr/bin/firewall-cmd --quiet --zone=public --remove-port=${port}/tcp
        logger -t "$0" "Notice: disabled firewall for ldaps (port ${port})."
      fi
    fi
  fi

done

