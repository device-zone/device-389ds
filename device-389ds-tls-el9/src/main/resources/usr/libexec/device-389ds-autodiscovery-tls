#!/bin/bash

set -e

exec 2> >(logger -t ${0})

request="${1}"
instance="${2}"

#
# Add/update/remove TLS

find /etc/device/services/ldap/tls/ -mindepth 1 -maxdepth 1 -type l | \
while read line; do

  if [ ! -e "$line/instance.d/name.txt" ]; then
    continue;
  fi
  if [ "${instance}" != "$(head $line/instance.d/name.txt)" ]; then
    continue;
  fi

  if test ! -L "$line/certificate.d"; then
    continue;
  else
    target=$(readlink -f "$line/certificate.d")
    uuid="$(basename $target)"
  fi

  # remove old instances? skip
  if test -f "$line/removed"; then
    continue;
  fi

  if test "/run/pki-certificate/certificate-${uuid}.pem" -nt "/etc/dirsrv/slapd-${instance}/cert9.db"; then

    rm -f "/run/dirsrv/slapd-${instance}-server-${uuid}.yaml"

    logger -t dirsrv-autodiscovery@${instance} "${request}ing 389ds TLS certificate..."

    redwax-tool --pem-in="/run/pki-certificate/certificate-${uuid}.pem" \
                --cert-out --chain-out --trust-out \
                --secret-token-out="/etc/dirsrv/slapd-${instance}/pin.txt" \
                --auto-out \
                --nss-out=/etc/dirsrv/slapd-${instance}/ \
                --metadata-out="/run/dirsrv/slapd-${instance}-server-${uuid}.yaml"

    logger -t dirsrv-autodiscovery@${instance} "${request}ed 389ds TLS certificate."

    systemctl --no-block try-restart "dirsrv@${instance}"

  fi

  logger -t "$0"  "Notice: creating directory server certmap.conf for ${instance}..."

  certmap_conf=`mktemp /etc/dirsrv/slapd-${instance}/certmap.conf.XXXXXX`

  cat >> ${certmap_conf} <<- EOF
# Generated by $0 on `date`
#
certmap default         default
default:verifycert      on
default:CmapLdapAttr    nsCertSubjectDN
EOF

  mv "${certmap_conf}" "/etc/dirsrv/slapd-${instance}/certmap.conf"

  logger -t "$0"  "Notice: created directory server certmap.conf for ${instance}."

done


